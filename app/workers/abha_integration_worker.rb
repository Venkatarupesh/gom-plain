class AbhaIntegrationWorker
  # include Sidekiq::Job
  # queue_as :critical
  require "uri"
  require "json"
  require "net/http"

  # def perform
  #   Person.where.not(aadhaar:0).find_in_batches(batch_size: 50) do |data|
  #     data.each do |v|
  #         response = get_abha_id(v.first_name,v.aadhaar,Time.at(v.date_of_birth).strftime('%d-%m-%Y'),v.gender,v.mobile,v.home_state_id,v.home_district_id,v.home_address)
  #         if response.code.to_i == 200
  #           response = JSON.parse(response.body)
  #           v.update!(abha_status:2)
  #           Person.find(v.person_id).update!(abha_id: response["healthIdNumber"].gsub("-", "").to_i,abha_address:  response["healthId"], phr_address: response["phrAddress"])
  #         else
  #           v.update(abha_status:3)
  #         end
  #       end
  #     end
  # end

  def perform(id)
    v = Person.find(id)
    response = get_abha_id(v.abha_name,v.aadhaar,v.date_of_birth,v.gender,v.mobile,v.abha_home_state_id,v.abha_home_district_id,v.abha_home_address)
    if response.code.to_i == 200
      response = JSON.parse(response.body)
      v.update_columns(abha_id: response["healthIdNumber"].gsub("-", "").to_i,abha_address: response["healthId"], phr_address: response["phrAddress"], abha_status: 2, aadhaar: 0)
    else
      crumb = Sentry::Breadcrumb.new(
        message: response.to_s,
        level: "error"
      )
      Sentry.add_breadcrumb(crumb)

      v.update_columns(abha_status: 3, abha_error: response.body)
    end
  end

  def get_token
    url = URI("https://dev.abdm.gov.in/gateway/v0.5/sessions")

    https = Net::HTTP.new(url.host, url.port)
    https.use_ssl = true

    request = Net::HTTP::Post.new(url)
    request["Content-Type"] = "application/json"
    request["Cookie"] = "TS011c04bd=01445fed04d27b833366c8229faa8733b3035089fb5d35f3c84879035bb45234691b3784ed690e7cbe49802e54c9a36f5ddc6c491f"
    request.body = JSON.dump({
                               "clientId": "KHUSHI_631045",
                               "clientSecret": "e83f5fc8-7902-454e-b13b-7c4b66455614"
                             })
    response = https.request(request)
    response = JSON.parse(response.read_body)
    response["accessToken"]
  end

  def get_abha_id(name, aadhaar, dob, gender, mobileNumber, stateCode, districtCode, address)
    url = URI("https://healthidsbx.abdm.gov.in/api/v1/hid/benefit/createHealthId/demo/auth")

    https = Net::HTTP.new(url.host, url.port)
    https.use_ssl = true

    request = Net::HTTP::Post.new(url)
    request["accept"] = "*/*"
    request["Accept-Language"] = "en-US"
    request["Authorization"] = "Bearer #{get_token}"
    request["X-HIP-ID"] = "SBX_000028"
    request["Content-Type"] = "application/json"
    request.body = JSON.dump({
                               "aadharNumber": aadhaar,
                               "autoGeneratedBenefitId": true,
                               "benefitId": "KHUSHI_631045",
                               "benefitName": "CHIP Rajasthan",
                               "consentHealthId": true,
                               "dateOfBirth": dob,
                               "gender": gender,
                               "mobileNumber": mobileNumber,
                               "stateCode": stateCode,
                               "districtCode": districtCode,
                               "name": name,
                               "address": address
                             })
       JSON.dump({
                   "aadharNumber": aadhaar,
                   "autoGeneratedBenefitId": true,
                   "benefitId": "KHUSHI_631045",
                   "benefitName": "CHIP Rajasthan",
                   "consentHealthId": true,
                   "dateOfBirth": dob,
                   "gender": gender,
                   "mobileNumber": mobileNumber,
                   "stateCode": stateCode,
                   "districtCode": districtCode,
                   "name": name,
                   "address": address
                 })
    https.request(request)
  end
end